@model IEnumerable<ApplicationCore.Entities.TopicType>

@{
    ViewData["Title"] = "Loại tài liệu";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <a asp-action="Create" class="btn btn-outline-danger btn-sm float-right"><i class="fa fa-plus"></i> Tạo mới</a>
                <h3 class="card-title"><i class="fab fa-react"></i> @ViewData["Title"]</h3>
            </div>
            <div class="card-body">
                <table class="table table-bordered mb-3 table-striped table-hover dataTable">
                    <thead class="bg-danger">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Name)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="font-weight-bold">
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.TopicTypeId" class="btn btn-primary btn-sm"><i class="fa fa-pen"></i> Sửa</a>
                                    <a asp-action="Details" asp-route-id="@item.TopicTypeId" class="btn btn-info btn-sm"><i class="fa fa-folder"></i> Chi tiết</a>
                                    <button type="button" class="btn btn-danger btn-sm" data-toggle="modal" data-target="#deleteModal" data-whatever="@item.TopicTypeId">
                                        <i class="fa fa-trash"></i> Xóa
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title"><i class="fab fa-react"></i> Biểu đồ</h3>
            </div>
            <div class="card-body">
                <div class="chart">
                    <canvas id="pieChart" style="min-height: 450px; height: 450px; max-height: 450px; max-width: 100%;"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-action="Delete" method="post">
                <div class="modal-body">
                    <input type="hidden" name="Id" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section scripts {
    <script src="~/lib/chart.js/Chart.min.js"></script>
    <script>
        $('#deleteModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget)
            var recipient = button.data('whatever')
            var modal = $(this)
            modal.find('.modal-body input').val(recipient)
        })
        @Html.Raw(TempData["Info"])

        var pieColors = [];
        $.ajax({
            url: '/admin/dashboards/TopicTypeDataPieChart',
            success: function (data) {
                function getRandomColor() {
                    var letters = '0123456789ABCDEF';
                    var color = '#';
                    for (var i = 0; i < 6; i++) {
                        color += letters[Math.floor(Math.random() * 16)];
                    }
                    return color;
                }
                for (var i = 0; i < data.datasets.length; i++) {
                    pieColors.push(getRandomColor());
                }

                var donutData = {
                    labels: data.lables,
                    datasets: [
                        {
                            data: data.datasets,
                            backgroundColor: pieColors
                        }
                    ]
                };
                var pieChartCanvas = $('#pieChart').get(0).getContext('2d');
                var pieData = donutData;
                var pieOptions = {
                    maintainAspectRatio: false,
                    responsive: true,
                };

                var pieChart = new Chart(pieChartCanvas, {
                    type: 'pie',
                    data: pieData,
                    options: pieOptions
                });
            }
        });

    </script>
}
